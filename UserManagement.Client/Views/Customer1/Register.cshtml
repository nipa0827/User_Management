@using UserManagement.Models

@model Customer

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Sign Up</title>
    <script type="text/javascript">
        function signUp() {
            debugger
            var firstName = $('#firstName').val().trim();
            var lastName = $('#lastName').val();
            var email = $('#email').val();
            var role = $('#role').val();
            var username = $('#username').val();
            var password = $('#password').val();

            $.ajax({
                url: "http://localhost:51470/Customer1/Register",
                type: "GET",
                content: "application/json; charset=utf-8",
                dataType: "json",
                //data: { model:JSON.stringify(data)},
                data: { firstName: firstName, lastName: lastName, role: role, email: email, username: username, password: password },
                success: function (d) {

                },
                error: function (xhr, textStatus, errorThrown) {
                    // TODO: Show error
                }
            });
        }
    </script>
</head>
<body>
    <div class="wrapper">
        <div class="container">
            <form class="form">
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @id = "firstName" , @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @id = "lastName", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id = "email", @type = "email", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerRole, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CustomerRole",
                             new SelectList(Enum.GetValues(typeof(Role))),
                             "Select Role",
                             new {@id="role", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CustomerRole, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Username, new {@id="username", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Password, new { @id="password", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>*@


                <input type="text" id="firstName" placeholder="First Name" required/>
                <input type="text" id="lastName" placeholder="Last Name" required />
                <input type="email" id="email" placeholder="Email" required/>
                <input type="text" id="username" placeholder="Username" required />
                @Html.DropDownList("Customer Role",
                    new SelectList(Enum.GetValues(typeof(Role))),
                    "Select Role",
                    new { id= "role", @class = "form-control" })
                <input type="password" id="password" placeholder="Password" required>
                <input type="password" id="confirmPassword" placeholder="Confirm Password" required>
                <input type="button" id="signUpBtn" value="Sign Up" onclick="signUp()" />
                <a href="login.html" type="button">Have an account </a>
            </form>
        </div>

</body>
</html>
